name: Spring Boot CI/CD with ECR

on:
  push:
    branches: [main, develop]
  workflow_dispatch:

env:
  AWS_REGION: ca-central-1
  ECR_REPOSITORY: springboot-ci-app
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-lint-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: workflow

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v3

      - name: ‚òï Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: üì¶ Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: üõ†Ô∏è Build with Maven
        run: mvn clean package

      - name: ‚úÖ Run Unit Tests
        run: mvn test

      - name: üßπ Lint with Checkstyle
        run: mvn checkstyle:check || true

      - name: üîê Log in to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug AWS credentials (remove after testing)
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: üê≥ Build Docker Image
        run: |
          IMAGE_TAG=$( [[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "latest" || echo "dev" )
          docker build -t ${{ env.IMAGE_NAME }}:$IMAGE_TAG ./workflow
          docker tag ${{ env.IMAGE_NAME }}:$IMAGE_TAG 857736875915.dkr.ecr.ca-central-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: üì§ Push Docker Image to AWS ECR
        run: |
          IMAGE_TAG=$( [[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "latest" || echo "dev" )
          docker push 857736875915.dkr.ecr.ca-central-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

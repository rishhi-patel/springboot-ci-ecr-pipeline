deploy-to-ecr:
  needs: build-and-test
  runs-on: ubuntu-latest

  steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v3

    - name: 📥 Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: workflow/target

    - name: 🔐 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1

    - name: 🔐 Log in to AWS ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: 🐳 Build Docker Image
      working-directory: workflow
      run: |
        IMAGE_TAG=$( [[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "latest" || echo "dev" )
        docker build -t ${{ env.IMAGE_NAME }}:$IMAGE_TAG .
        docker tag ${{ env.IMAGE_NAME }}:$IMAGE_TAG 857736875915.dkr.ecr.ca-central-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

    - name: 📤 Push Docker Image to AWS ECR
      run: |
        IMAGE_TAG=$( [[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "latest" || echo "dev" )
        docker push 857736875915.dkr.ecr.ca-central-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

    - name: 🚀 Deploy to ECS
      if: github.ref == 'refs/heads/main'
      run: |
        aws ecs update-service \
          --cluster springboot-cluster \
          --service springboot-service \
          --force-new-deployment \
          --region ca-central-1
